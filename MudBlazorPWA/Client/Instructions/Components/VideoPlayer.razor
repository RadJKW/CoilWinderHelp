@using Microsoft.EntityFrameworkCore.ChangeTracking.Internal
@implements IAsyncDisposable
@inject IJSRuntime JsRuntime
@inject HubClientService DirectoryHub



@if (VideoUrl != null) {
  <video id="@Id"
      onloadedmetadata="@JsSetVideoPlayer"
      src="@VideoUrl"
      autoplay
      preload
      muted
      controls
      style="width: 100%; height: 100%">
    <source src="@VideoUrl"
        type="video/mp4"/>

  </video>
}

@code {
  // use reflection to gets the NameSpace of this component
  [Parameter]
  public string Id { get; set; } = "video-player";

  [Parameter]
  [EditorRequired]
  public string? VideoUrl { get; set; }


  private IJSObjectReference? _videoJs;

  protected override async Task OnAfterRenderAsync(bool firstRender) {
    if (firstRender) {
      _videoJs = await JsRuntime
        .InvokeAsync<IJSObjectReference>(
          "import", "./Instructions/Components/VideoPlayer.razor.js");
    }
  }
  private async Task JsSetVideoPlayer() {
    if (_videoJs != null)
      await _videoJs.InvokeVoidAsync("init", Id);
  }
  public async ValueTask DisposeAsync() {
    if (_videoJs != null) {
      await _videoJs.DisposeAsync();
    }

  }
}
