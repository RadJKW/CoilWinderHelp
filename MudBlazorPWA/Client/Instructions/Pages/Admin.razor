@page "/Admin"
@layout DocViewLayout
@inject AdminEditorState State
@implements IDisposable

@if (_loading) {
  <div class="align-center d-flex justify-center mud-width-full"
      style="height: 50%">
    <MudProgressCircular Indeterminate
        Color="Color.Secondary"
        Size="Size.Large"/>
  </div>
} else {
  <div class="directory-tree-grid">

    <div class="directory-tree-component dark-background rounded-lg">
      <DirectoryTree class="directory-tree bordered"/>
    </div>
    <div class="align-center d-flex justify-center"
        style="justify-self: start;">
      <MudSkeleton/>
      <MudSkeleton SkeletonType="SkeletonType.Circle"
          Width="100px"
          Height="100%"/>
      <MudSkeleton SkeletonType="SkeletonType.Rectangle"
          Height="100%"/>
    </div>

  </div>
}

@code{


  private bool _loading = true;

  protected override async Task OnInitializedAsync() {
    await base.OnInitializedAsync();
    State.StateChanged += AdminStateChanged;
    await State.FetchDirectoryTree();
  }
  private void AdminStateChanged() { StateHasChanged(); }

  protected override async Task OnAfterRenderAsync(bool firstRender) {
    await base.OnAfterRenderAsync(firstRender);
    if (!firstRender) {
      _loading = false;
    }
  }

  public void Dispose() { State.StateChanged -= AdminStateChanged; }

}
