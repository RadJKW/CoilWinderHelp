<TodoMenu/>
<MudBadge
    Color="Color.Secondary"
    Dot="true"
    Overlap="true"
    Visible="_newNotificationsAvailable">
  <MudMenu
      Icon="@Icons.Material.Outlined.Notifications"
      Color="Color.Inherit"
      AnchorOrigin="Origin.BottomLeft"
      TransformOrigin="Origin.TopCenter"
      PopoverClass="docs-layout-menu-shadow"
      ListClass="pa-2 docs-menu-list"
      LockScroll="true">
    <div
        class="align-center d-flex justify-space-between px-2">
      <MudText
          Typo="Typo.subtitle2">
        Notifications
      </MudText>
      <MudButton
          Disabled="@(_newNotificationsAvailable == false)"
          OnClick="MarkNotificationAsRead"
          StartIcon="@Icons.Material.Filled.DoneAll"
          Variant="Variant.Text"
          Color="Color.Primary"
          Class="ml-16 mr-n2">
        Clear
      </MudButton>
    </div>


    @if (_messages != null && _newNotificationsAvailable) {
      @foreach (var (message, _) in _messages.Take(5)) {
        <MudMenuItem
            Class="px-2 py-0 rounded">
          <MudText
              Typo="Typo.body2">
            @message
          </MudText>
        </MudMenuItem>
        <MudDivider
            Class="my-2" />
      }
    } else {
      <div
          class="align-center d-flex justify-center px-2 py-8 relative">
        <MudText
            Class="mud-text-secondary my-12">
          Nothing new :(
        </MudText>
      </div>
    }
  </MudMenu>
</MudBadge>
<MudTooltip
    Duration="1000"
    Text="@(LayoutService.IsDarkMode ? "Switch to Light Theme" : "Switch to Dark Theme")">
  <MudIconButton
      Icon="@(LayoutService.IsDarkMode ? @Icons.Material.Rounded.LightMode : @Icons.Material.Outlined.DarkMode)"
      Color="Color.Inherit"
      OnClick="@(LayoutService.ToggleDarkMode)" />
</MudTooltip>
