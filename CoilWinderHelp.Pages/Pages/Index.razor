@page "/index"
@layout DocViewLayout
@implements IDisposable
@inject IHttpClientFactory ClientFactory

<PageTitle>Index</PageTitle>

<div class="index-grid">

  <div class="video-content">
    @if (VideoUrl is not null) {

      <MediaViewer
          Src="@VideoUrl">
      </MediaViewer>
    }
  </div>

  <div class="video-footer">

  </div>
</div>

@code{

      private const string RelativePath = "files";

      private const string RelativeVideoUrl = "TrainingVideos/Unsorted/WINDING%20SPEC%20DOWNLOAD%20Z80.mp4";



  //[CascadingParameter]
  //public BaseLayout? BaseLayout { get; set; }

  private HttpClient? FileServer { get; set; }

  private string? VideoUrl { get; set; }

  protected override async Task OnInitializedAsync() {
    await base.OnInitializedAsync();
    FileServer = ClientFactory.CreateClient("PwaServer");
    VideoUrl = $"{FileServer.BaseAddress}{RelativePath}/{RelativeVideoUrl}";
  }

   public void Dispose() {
  //   if (BaseLayout != null)
  //     BaseLayout.DrawerDisabled = false;
   }
}
