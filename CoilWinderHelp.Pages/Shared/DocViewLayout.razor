@layout MainLayout
@inherits LayoutComponentBase
@inject LayoutService LayoutService
<CascadingValue
    Value="this">
  <MudLayout>
    <MudAppBar
        Elevation="5"
        Dense="true">
      <MudIconButton
          Icon="@Icons.Material.Filled.Menu"
          Color="Color.Inherit"
          Edge="Edge.Start"
          OnClick="@(_ => ToggleDrawer())"/>
      <MudSpacer/>
      @*display the current PAGE TITLE *@

      <MudText
          Typo="Typo.h6"
          Style="text-wrap: none">
        @(PageTitle)
      </MudText>

      <MudSpacer/>
      <AppbarButtons/>
    </MudAppBar>
    <MudDrawer
        Class="docview drawer-left z-100"
        @bind-Open="_drawerOpen"
        Anchor="Anchor.Left"
        Elevation="1"
        Variant="@DrawerVariant.Mini"
        ClipMode="DrawerClipMode.Always"
        PreserveOpenState="true"
        OpenMiniOnHover="true">
      <NavMenu/>
    </MudDrawer>

    <MudMainContent
        Class="docview main-content">
      <MudContainer
          Class="docview main-container"
          MaxWidth="MaxWidth.ExtraLarge">

        @Body
      </MudContainer>
    </MudMainContent>

    <MudDrawer
        Class="docview drawer-right"
        @bind-Open="@_drawerRightOpen"
        Anchor="Anchor.Right"
        Fixed="true"
        Elevation="1"
        Variant="@DrawerVariant.Mini"
        MiniWidth="15%"
        Width="25%"
        ClipMode="DrawerClipMode.Always"
        PreserveOpenState="true"
        OpenMiniOnHover="true">
      <div
          class="pdf-content">
        <MudSkeleton
            SkeletonType="SkeletonType.Rectangle"
            Animation="Animation.Pulse"
            Height="100%"
            Width="100%">
        </MudSkeleton>
      </div>

    </MudDrawer>
  </MudLayout>
</CascadingValue>

@code {


  // create a delegate for the event that will be raised when the drawer is toggled

  public RenderFragment? RightDrawerContent { get; set; }

  public delegate void ToggleDrawerEventHandler();

  public event ToggleDrawerEventHandler? ToggleDrawerEvent;

  public delegate void ToggleDrawerRightEventHandler();

  public event ToggleDrawerRightEventHandler? ToggleDrawerRightEvent;

  private bool _drawerOpen;
  private bool _drawerRightOpen;

  protected override void OnInitialized() {
    LayoutService.SetBaseTheme(new());
    LayoutService.SetDarkMode(true);

  }
  // create a method that will raise the event

  public void HandleToggleDrawerEvent() {
    ToggleDrawerEvent?.Invoke();
  }




  private string PageTitle { get; set; } = "MudBlazorTest";



  // after the route changes, update the page title
  void ToggleDrawer() {
    _drawerOpen = !_drawerOpen;
    ToggleDrawerEvent?.Invoke();


  }
  void ToggleDrawerRight() {
    ToggleDrawerRightEvent?.Invoke();
  }

}
