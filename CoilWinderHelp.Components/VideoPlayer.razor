@implements IAsyncDisposable
@inject IJSRuntime JsRuntime

  <video
      id="@VideoPlayerId"
      onloadedmetadata="@(VideoLoaded)"
      buffered="true"
      preload="auto"
      controls="controls"
      autoplay="autoplay">
    <source src="@VideoUrl" type="video/mp4" />
  </video>

@code {
  private string VideoPlayerId { get; set; } = "video-player";

  [Parameter]
  [EditorRequired]
  public required string VideoUrl { get; set; }

  private IJSObjectReference? _videoJs;

  protected override async Task OnAfterRenderAsync(bool firstRender) {
    if (firstRender) {
      _videoJs = await JsRuntime
        .InvokeAsync<IJSObjectReference>(
          "import", "./_content/CoilWinderHelp.Components/VideoPlayer.razor.js");
    }
  }

  private async Task VideoLoaded() {
    await JsSetVideoPlayer();
  }

  private async Task JsSetVideoPlayer() {
    if (_videoJs != null)
      await _videoJs.InvokeVoidAsync("init", VideoPlayerId);
  }


  public async ValueTask DisposeAsync() {
    if (_videoJs != null) {
      await _videoJs.DisposeAsync();
    }
  }
}
